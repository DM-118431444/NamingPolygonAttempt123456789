@{
    ViewData["Title"] = "Home Page";
}

<!-- All code that is not my own or auto-code, unless stated otherwise, is taken from  https://stackoverflow.com/questions/67153941/is-there-a-way-to-open-a-popup-input-text-after-a-polygon-is-created-in-leaflet by giskan77-->

<head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw-src.css" integrity="sha512-vJfMKRRm4c4UupyPwGUZI8U651mSzbmmPgR3sdE3LcwBPsdGeARvUM5EcSTg34DK8YIRiIo+oJwNfZPMKEQyug==" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js" integrity="sha512-ozq8xQKq6urvuU6jNgkfqAmT7jKN2XumbrX1JiB3TnF7tI48DPI4Gy1GXKD/V3EExgAs1V+pRO7vwtS1LHg0Gw==" crossorigin="anonymous"></script>




    <script>src = "..\js\GeometryUtil.js"</script>

</head>
<div class="text-center">
    <h1 class="display-4">Polygon naming example</h1>
    
</div>

<div id="map" style="width: 100%; height: 500px;"></div>

<script>
    //Creating the map, centering it and adding the zoom 
    var map = L.map('map', {
        center: [51.8935, -8.4921],
        zoom: 16,
    });

    //OpenStreetMap Layer at https://leafletjs.com/index.html
    var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    osm.addTo(map);

    //Esri.World Imagery js found at https://leaflet-extras.github.io/leaflet-providers/preview/ || They are open source tilelayers

    var Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
        attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'
    });

    Esri_WorldImagery.addTo(map);




    drawnItems = L.featureGroup().addTo(map);
    var drawControl = new L.Control.Draw({


        edit: {
            featureGroup: drawnItems,
        },
    });
    //Getting the user generated name of the ploygon from the popup
    var getName = function (layer) {
        var name = prompt('please, enter the geometry name', 'geometry name');
        return name;
    };

    // Code to add the hectare acre calculations taken and modified from || How to get the area string from a polygon using leaflet.draw at https://stackoverflow.com/questions/29724725/how-to-get-the-area-string-from-a-polygon-using-leaflet-draw by The Brofessor
    map.addControl(drawControl);
    map.on(L.Draw.Event.CREATED, function (e) {
        var layer = e.layer;
        var name = getName(layer);

        // seeArea varible holds the value of the area generated by the user's polygon || the L.Geometry util method does the calculation and it is linked to the GeometryUtil.js file in the js folder of the project.
        var seeArea = L.GeometryUtil.geodesicArea(layer.getLatLngs()[0]);
        //If statement that does not name the polygon unless the user inputs some data
        if (name == 'geometry name') {
            layer.bindPopup('-- no name provided --');
        } else if (name == '') {
            layer.bindPopup('-- no name provided --');
        } else {
            //Adds hectare acre to console log
            console.log(seeArea);
            layer.bindTooltip("Name of polygon: " + name + ", Area of polygon = " + ((seeArea / 10000).toFixed(2)) + " ha", { permanent: true, direction: 'top' })
        };



        //Displays the name and hectare acreage to the polygon 
        drawnItems.addLayer(layer);





    });



</script>